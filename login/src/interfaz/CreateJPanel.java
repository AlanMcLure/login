package interfaz;

import business.Person;
import java.io.File;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import interfaz.CreateJPanel.Departamento;

import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JTextField;

/**
 * Clase CreateJPanel: está clase se utiliza para la interfaz de creación de los
 * perfiles
 * 
 * @author Alan McLure Alarcón
 * @version 21/03/2023
 */
public class CreateJPanel extends javax.swing.JPanel {

	enum Departamento {
		MARKETING, TIC, ADMINISTRATIVO
	}

	/**
	 * Consctructor: crea un nuevo formulario ControlJPanel
	 * 
	 * @param person
	 */
	public CreateJPanel() {
		initComponents();
	}

	/**
	 * Función para comprobar expresiones regulares
	 * 
	 * @param palabra (tipo String) que guarda la palabra que se quiere comprobar
	 * @param er      (tipo String) que guarda la expresión regular
	 * @return (boolean) true o false en función de si cumple o no la expresión
	 *         regular
	 */
	boolean comprobarExpReg(String palabra, String er) {
		Pattern pat = Pattern.compile(er);
		Matcher mat = pat.matcher(palabra);
		return mat.matches();
	}

	/**
	 * La función inicia los componentes
	 */
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		lblCrearPerfil = new javax.swing.JLabel();
		btnSeleccionarFoto = new javax.swing.JButton();
		textPathFoto = new javax.swing.JTextField();
		btnCrear = new javax.swing.JButton();
		lblNombre = new javax.swing.JLabel();
		lblPais = new javax.swing.JLabel();
		lblFechaNacimiento = new javax.swing.JLabel();
		lblTelefono = new javax.swing.JLabel();
		lblEmail = new javax.swing.JLabel();
		lblSeguridadSocial = new javax.swing.JLabel();
		lblCuentaBancaria = new javax.swing.JLabel();
		lblDepartamento = new javax.swing.JLabel();
		lblFechaIncorporacion = new javax.swing.JLabel();
		lblSueldo = new javax.swing.JLabel();
		textFieldNombre = new javax.swing.JTextField();
		textFieldPais = new javax.swing.JTextField();
		textFieldTelefono = new javax.swing.JTextField();
		textFieldSeguridadSocial = new javax.swing.JTextField();
		textFieldEmail = new javax.swing.JTextField();
		textFieldCuentaBancaria = new javax.swing.JTextField();
		comboBoxDepartamento = new javax.swing.JComboBox();
		textFieldDiaNacimiento = new javax.swing.JTextField();
		textFieldMesNacimiento = new javax.swing.JTextField();
		textFieldAnyoNacimiento = new javax.swing.JTextField();
		textFieldDiaIncorporacion = new javax.swing.JTextField();
		textFieldMesIncorporacion = new javax.swing.JTextField();
		textFieldAnyoIncorporacion = new javax.swing.JTextField();
		textFieldSueldo = new javax.swing.JTextField();

		lblCrearPerfil.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
		lblCrearPerfil.setText("Crear Perfil");

		btnSeleccionarFoto.setText("Seleccionar Foto");
		btnSeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSeleccionarFotoActionPerformed(evt);
			}
		});

		btnCrear.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
		btnCrear.setText("Crear");
		btnCrear.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				createBtnActionPerformed(evt);
			}
		});

		lblNombre.setText("Nombre: ");
		lblPais.setText("País: ");
		lblFechaNacimiento.setText("Fecha de nacimiento: ");
		lblTelefono.setText("Teléfono: ");
		lblEmail.setText("Email: ");
		lblSeguridadSocial.setText("Número SS: ");
		lblCuentaBancaria.setText("Número de cuenta bancaria: ");
		lblFechaIncorporacion.setText("Fecha incorporación: ");
		lblDepartamento.setText("Departamento: ");
		lblSueldo.setText("Sueldo: ");
		comboBoxDepartamento.setModel(new DefaultComboBoxModel(Departamento.values()));

//		textPathFoto.addActionListener(new java.awt.event.ActionListener() {
//			public void actionPerformed(java.awt.event.ActionEvent evt) {
//				picTextPathActionPerformed(evt);
//			}
//		});

//		textFieldEmail.addActionListener(new java.awt.event.ActionListener() {
//			public void actionPerformed(java.awt.event.ActionEvent evt) {
//				emailTextFieldActionPerformed(evt);
//			}
//		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.TRAILING).addGroup(layout.createSequentialGroup()
				.addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
						.addGap(59)
						.addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(lblSeguridadSocial)
								.addComponent(lblTelefono).addComponent(lblEmail).addComponent(lblFechaNacimiento)
								.addComponent(lblPais).addComponent(lblNombre).addComponent(lblCuentaBancaria)
								.addGroup(layout.createSequentialGroup()
										.addComponent(lblDepartamento, GroupLayout.DEFAULT_SIZE,
												GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGap(113))
								.addComponent(lblFechaIncorporacion).addComponent(lblSueldo))
						.addPreferredGap(ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addComponent(textFieldSueldo, GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
								.addComponent(comboBoxDepartamento, Alignment.TRAILING, 0, 180, Short.MAX_VALUE)
								.addComponent(textFieldNombre, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 180,
										Short.MAX_VALUE)
								.addComponent(textFieldPais, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 180,
										Short.MAX_VALUE)
								.addComponent(textFieldTelefono, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 180,
										Short.MAX_VALUE)
								.addComponent(textFieldEmail, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 180,
										Short.MAX_VALUE)
								.addComponent(textFieldSeguridadSocial, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE,
										180, Short.MAX_VALUE)
								.addComponent(textFieldCuentaBancaria, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE,
										180, Short.MAX_VALUE)
								.addGroup(Alignment.TRAILING,
										layout.createSequentialGroup()
												.addComponent(textFieldDiaIncorporacion, GroupLayout.PREFERRED_SIZE, 56,
														Short.MAX_VALUE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(textFieldMesIncorporacion, GroupLayout.PREFERRED_SIZE, 56,
														Short.MAX_VALUE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(textFieldAnyoIncorporacion, GroupLayout.PREFERRED_SIZE,
														56, Short.MAX_VALUE))
								.addGroup(Alignment.TRAILING,
										layout.createSequentialGroup()
												.addComponent(textFieldDiaNacimiento, GroupLayout.PREFERRED_SIZE, 56,
														Short.MAX_VALUE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(textFieldMesNacimiento, GroupLayout.PREFERRED_SIZE, 56,
														Short.MAX_VALUE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(textFieldAnyoNacimiento, GroupLayout.PREFERRED_SIZE, 56,
														Short.MAX_VALUE)))
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(textPathFoto, GroupLayout.PREFERRED_SIZE, 181, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.UNRELATED).addComponent(btnSeleccionarFoto))
						.addGroup(layout.createSequentialGroup().addGap(372).addComponent(lblCrearPerfil)))
				.addContainerGap())
				.addGroup(layout.createSequentialGroup().addContainerGap(486, Short.MAX_VALUE).addComponent(btnCrear)
						.addGap(258)));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addGap(47).addComponent(lblCrearPerfil).addGap(40)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(textFieldNombre, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(textPathFoto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(btnSeleccionarFoto).addComponent(lblNombre))
				.addGap(6)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(textFieldPais, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(lblPais))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addGroup(
						layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(textFieldDiaNacimiento, GroupLayout.PREFERRED_SIZE,
										GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblFechaNacimiento)
								.addComponent(textFieldMesNacimiento, GroupLayout.PREFERRED_SIZE,
										GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(textFieldAnyoNacimiento, GroupLayout.PREFERRED_SIZE,
										GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(textFieldTelefono, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(lblTelefono))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(textFieldEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(lblEmail))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE).addComponent(lblSeguridadSocial).addComponent(
						textFieldSeguridadSocial, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
						GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(Alignment.TRAILING).addComponent(lblCuentaBancaria).addComponent(
						textFieldCuentaBancaria, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
						GroupLayout.PREFERRED_SIZE))
				.addGap(18)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE).addComponent(lblFechaIncorporacion)
						.addComponent(textFieldDiaIncorporacion, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(textFieldMesIncorporacion, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(textFieldAnyoIncorporacion, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE))
				.addGap(12)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE).addComponent(lblDepartamento).addComponent(
						comboBoxDepartamento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
						GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(ComponentPlacement.UNRELATED)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE).addComponent(lblSueldo).addComponent(
						textFieldSueldo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
						GroupLayout.PREFERRED_SIZE))
				.addGap(12).addComponent(btnCrear).addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		this.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * Función que al hacer una acción (click) sobre el botón de seleccionar foto,
	 * muestre el seleccionador y guarde la foto seleccionada. Por último muestra el
	 * texto de la ruta en el textField de la foto
	 * 
	 * @param evt que guarda el evento de action performed
	 */
	private void btnSeleccionarFotoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		try {
			JFileChooser chooser = new JFileChooser();
			chooser.showOpenDialog(null);
			File f = chooser.getSelectedFile();
			String fileName = f.getAbsolutePath();
			textPathFoto.setText(fileName);
		} catch (NullPointerException e) {
			JOptionPane.showMessageDialog(null, "No has seleccionado nada");
		}
	}// GEN-LAST:event_jButton1ActionPerformed

//	private void picTextPathActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_picTextPathActionPerformed
//		// TODO add your handling code here:
//	}// GEN-LAST:event_picTextPathActionPerformed

	/**
	 * Función que al hacer una acción (click) sobre el botón de crear, haga todas
	 * las comprobacione de los datos introducidos y, en función de las
	 * comprobaciones, muestre los errores o guarde los datos en el objeto person
	 * 
	 * @param evt que guarda el evento de action performed
	 */
	private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_createBtnActionPerformed
		// TODO add your handling code here:
		String mensajeComprobacion = "";
		boolean comprobacion = true;

		if (!(comprobarExpReg(textFieldNombre.getText(), "^.{1,50}$"))) {
			mensajeComprobacion = mensajeComprobacion + "Formato de nombre incorrecto (máx. 50 caracteres)\n";
			comprobacion = false;
		}
		if (!(comprobarExpReg(textFieldPais.getText(), "^.{1,50}$"))) {
			mensajeComprobacion = mensajeComprobacion + "Formato de país incorrecto (máx. 50 caracteres)\n";
			comprobacion = false;
		}
		if (!(comprobarExpReg(textFieldTelefono.getText(), "^[67]\\d{8}$"))) {
			mensajeComprobacion = mensajeComprobacion
					+ "Formato de teléfono incorrecto (9 números comenzando por 6 o por 7)\n";
			comprobacion = false;
		}
		if (!(comprobarExpReg(textFieldEmail.getText(), "^\\w+@\\w+\\.[a-z]{2,3}$"))) {
			mensajeComprobacion = mensajeComprobacion + "Formato de email incorrecto\n";
			comprobacion = false;
		}
		if (!(comprobarExpReg(textFieldSeguridadSocial.getText(), "^\\d{10}$"))) {
			mensajeComprobacion = mensajeComprobacion + "Formato de cuenta bancaria incorrecto (10 cifras)\n";
			comprobacion = false;
		}
		if (!(comprobarExpReg(textFieldCuentaBancaria.getText(), "^ES\\d{2}-\\d{4}-\\d{4}-\\d{2}-\\d{10}$"))) {
			mensajeComprobacion = mensajeComprobacion
					+ "Formato de cuenta bancaria incorrecto (ES00-0000-0000-00-0000000000)\n";
			comprobacion = false;
		}

		if (!(comprobarExpReg(textPathFoto.getText(), ".+\\.(png|jpg|jpeg|gif|bmp)$"))) {
			mensajeComprobacion = mensajeComprobacion + "Formato de imagen incorrecto (png, jpg, jpeg, gif, bmp)\n";
			comprobacion = false;
		}

		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
		try {
			LocalDate fechaNacimiento = LocalDate.of(Integer.parseInt(textFieldAnyoNacimiento.getText()),
					Integer.parseInt(textFieldMesNacimiento.getText()),
					Integer.parseInt(textFieldDiaNacimiento.getText()));

			LocalDate fechaIncorporacion = LocalDate.of(Integer.parseInt(textFieldAnyoIncorporacion.getText()),
					Integer.parseInt(textFieldMesIncorporacion.getText()),
					Integer.parseInt(textFieldDiaIncorporacion.getText()));

			if (!(fechaNacimiento.plusYears(18).isBefore(fechaIncorporacion))) {
				mensajeComprobacion = mensajeComprobacion + "El empleado debe de tener 18 años como mínimo\n";
				comprobacion = false;
			}

			if (!(fechaIncorporacion.isBefore(LocalDate.now().plusDays(30)))) {
				mensajeComprobacion = mensajeComprobacion
						+ "Formato de fecha incorrecto (Fecha de incorporación más de 30 días posterior a la actual)\n";
				comprobacion = false;
			}

			if (comprobacion) {
				MainJFrame.person = new Person(textFieldNombre.getText(), textFieldPais.getText(),
						fechaNacimiento.format(formatter), textFieldTelefono.getText(), textFieldEmail.getText(),
						textFieldSeguridadSocial.getText(), textFieldCuentaBancaria.getText(),
						fechaIncorporacion.format(formatter), comboBoxDepartamento.getSelectedItem().toString(),
						textPathFoto.getText(), Integer.parseInt(textFieldSueldo.getText()));
				MainJFrame.lista.add(MainJFrame.person);
				MainJFrame.numPerfil++;

				mensajeComprobacion = "Perfil creado correctamente !!!";
			}
		} catch (NumberFormatException e1) {
			mensajeComprobacion = mensajeComprobacion + "Fecha/s no especificada\n";
		} catch (DateTimeException e2) {
			mensajeComprobacion = mensajeComprobacion + "Formato incorrecto de fecha/s (Número invalido)\n";
		} finally {
			JOptionPane.showMessageDialog(null, mensajeComprobacion);
		}
	}// GEN-LAST:event_createBtnActionPerformed

//	private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_emailTextFieldActionPerformed
//		// TODO add your handling code here:
//	}// GEN-LAST:event_emailTextFieldActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel lblCrearPerfil;
	private javax.swing.JLabel lblNombre;
	private javax.swing.JLabel lblPais;
	private javax.swing.JLabel lblFechaNacimiento;
	private javax.swing.JLabel lblTelefono;
	private javax.swing.JLabel lblEmail;
	private javax.swing.JLabel lblSeguridadSocial;
	private javax.swing.JLabel lblCuentaBancaria;
	private javax.swing.JLabel lblFechaIncorporacion;
	private javax.swing.JLabel lblDepartamento;
	private javax.swing.JLabel lblSueldo;
	private javax.swing.JTextField textFieldNombre;
	private javax.swing.JTextField textFieldPais;
	private javax.swing.JTextField textFieldDiaNacimiento;
	private javax.swing.JTextField textFieldMesNacimiento;
	private javax.swing.JTextField textFieldAnyoNacimiento;
	private javax.swing.JTextField textFieldTelefono;
	private javax.swing.JTextField textFieldEmail;
	private javax.swing.JTextField textFieldSeguridadSocial;
	private javax.swing.JTextField textFieldCuentaBancaria;
	private javax.swing.JTextField textFieldDiaIncorporacion;
	private javax.swing.JTextField textFieldMesIncorporacion;
	private javax.swing.JTextField textFieldAnyoIncorporacion;
	private javax.swing.JTextField textPathFoto;
	private javax.swing.JTextField textFieldSueldo;
	private javax.swing.JComboBox comboBoxDepartamento;
	private javax.swing.JButton btnSeleccionarFoto;
	private javax.swing.JButton btnCrear;
}
